{"version":3,"sources":["axios.js","Row.js","Request.js","Banner.js","photo/netflix1.png","Nav.js","App.js","reportWebVitals.js","index.js"],"names":["instanse","axios","create","baseURL","Row","title","fetchUrl","isLargeRow","useState","movies","setMovies","trailerUrl","setTrailerUrl","useEffect","a","get","request","data","results","fetchData","console","log","className","map","movie","onClick","movieTrailer","name","original_title","original_name","then","url","urlParams","URLSearchParams","URL","search","catch","error","handleClick","src","poster_path","backdrop_path","id","alt","videoId","opts","height","width","playerVars","autoplay","requests","fetchOriginal","fetchrated","fetchTranding","fetchpopular","fetchtvlatest1","fetchtvlatest","fetchtrand","fetchUpcomming","Banner","str","n","Math","floor","random","length","style","backgroundImage","overview","substr","Nav","show","handleShow","window","addEventListener","scrollY","removeEventListener","logo","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.555d1e08.chunk.js","sourcesContent":["import axios from 'axios';\r\n \r\nconst instanse = axios.create({\r\n    baseURL : \"https://api.themoviedb.org/3\",\r\n});\r\n\r\nexport default instanse;","import React, { useState, useEffect } from \"react\";\r\nimport axios from './axios';\r\nimport './Row.css';\r\nimport YouTube from 'react-youtube';\r\nimport movieTrailer from 'movie-trailer';\r\n\r\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\r\n\r\nfunction Row({ title, fetchUrl, isLargeRow }){\r\n    const [movies, setMovies] = useState([]);\r\n    const [trailerUrl, setTrailerUrl] = useState(\"\");\r\n    \r\n    useEffect(() => {\r\n        async function fetchData(){\r\n            const request = await axios.get(fetchUrl);\r\n            setMovies(request.data.results);\r\n            return request;\r\n        }\r\n        fetchData();\r\n\r\n    }, [fetchUrl]);\r\n\r\n    console.log(movies);\r\n    \r\n    const opts={\r\n        height : \"390px\",\r\n        width : \"100%\",\r\n        playerVars: {\r\n\r\n            autoplay:1,\r\n            \r\n        },\r\n    };\r\n\r\n    const handleClick = (movie) => {\r\n        if(trailerUrl){\r\n            setTrailerUrl(\"\");  \r\n        } else {\r\n            movieTrailer(movie?.name || movie?.original_title || movie?.title || movie?.original_name || \"\")\r\n            .then((url) => {\r\n                const urlParams=new URLSearchParams(new URL(url).search);\r\n                setTrailerUrl(urlParams.get(\"v\"));\r\n            })\r\n            .catch((error) => console.log(error));\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n    return(\r\n        <div className=\"row p-3\">\r\n            <h3 className=\"text-white p-3\">{title}</h3>\r\n            <div className=\"row_posters\">    \r\n           \r\n                {movies.map(movie => (\r\n                   \r\n                      \r\n                    \r\n                   \r\n                    <img className={`row_poster ${isLargeRow && \"row_postLarge\"}`} onClick={() => handleClick(movie)} src={`${base_url}${ isLargeRow ? movie.poster_path : movie.backdrop_path}`} id={movie.id}  alt={movie.name}/>\r\n                \r\n                  \r\n                    \r\n                    \r\n                ))}\r\n\r\n\r\n            </div>\r\n            <div className=\"col-12\">\r\n            {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\r\n            </div>\r\n          \r\n           \r\n\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\nexport default Row;","const api_key = \"0871c3a4e00ca667d8038873996b5300\";\r\n\r\nconst requests = {\r\n    fetchOriginal : \"https://api.themoviedb.org/3/discover/tv?api_key=<<api_key>>&with_networks=213\",\r\n    fetchrated : \"/movie/top_rated?api_key=0871c3a4e00ca667d8038873996b5300&language=en-US&page=1\",\r\n    fetchTranding : \"/trending/all/day?api_key=0871c3a4e00ca667d8038873996b5300\",\r\n    fetchpopular : \"/movie/popular?api_key=0871c3a4e00ca667d8038873996b5300&language=en-US\",\r\n    fetchtvlatest1 : \"/tv/latest?api_key=0871c3a4e00ca667d8038873996b5300&language=en-US\",\r\n    fetchtvlatest : \"/tv/top_rated?api_key=<<api_key>>&language=en-US&page=1\",\r\n    fetchtrand: \"/trending/movie/day?api_key=0871c3a4e00ca667d8038873996b5300\",\r\n    fetchUpcomming : \"/movie/upcoming?api_key=0871c3a4e00ca667d8038873996b5300&language=en-US&page=1\",\r\n    \r\n    \r\n}\r\nexport default requests;\r\n\r\n\r\n\r\n\r\n\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from './axios';\r\nimport requests from './Request';\r\nimport './Banner.css';\r\n\r\n\r\n\r\nfunction Banner(){\r\n    \r\n    const [movie, setMovies] = useState([]);\r\n    \r\n    useEffect(() => {\r\n        async function fetchData(){\r\n            const request = await axios.get(requests.fetchTranding);\r\n            setMovies(\r\n                       request.data.results[\r\n                           Math.floor(Math.random() * request.data.results.length - 1)\r\n                        ]\r\n                );\r\n            return request;\r\n        }\r\n        fetchData();\r\n\r\n    }, []);\r\n\r\n    console.log(movie);\r\n\r\n    function truncate(str, n){\r\n        return str?.length > n ? str.substr(0, n-1) + \"...\" :str;\r\n    }\r\n\r\n\r\n     return(\r\n                 \r\n            <header className=\"banner\"\r\n              style={{\r\n                // backgroundSize:\"cover\",\r\n                backgroundImage: `url(\r\n                    \"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\"\r\n                )`,\r\n                // backgroundPosition:\"center cover\",\r\n\r\n              }}\r\n            >\r\n                <div className=\"banner_content\">\r\n                     <h1 className=\"banner_title d-flex justify-content-start\">\r\n                         {movie?.name || movie?.title || movie?.original_name}\r\n\r\n                     </h1>\r\n\r\n                     <div className=\"banner_buttons  d-flex justify-content-start\">\r\n                         <button className=\"banner_button\">Play</button>\r\n                         <button className=\"banner_button\">My List</button>\r\n                         \r\n\r\n                     </div>\r\n                     <h1 className=\"discription d-flex justify-content-start\">\r\n                         {truncate(movie?.overview, 150)}\r\n                     </h1>\r\n                </div>\r\n                {/* <div className=\"banner--fadeBottom\" /> */}\r\n            </header>\r\n     )\r\n}\r\n\r\nexport default Banner;","export default __webpack_public_path__ + \"static/media/netflix1.4c425fa0.png\";","import React, { useEffect, useState } from 'react';\r\nimport logo from './photo/netflix1.png'\r\nimport './Nav.css'\r\n\r\nfunction Nav(){\r\n\r\n    const [show, handleShow] = useState(false);\r\n    useEffect(() => {\r\n        window.addEventListener(\"scroll\", () => {\r\n            if(window.scrollY > 100){\r\n                handleShow(true);\r\n            } else handleShow(false);\r\n        });\r\n        return () => {\r\n            window.removeEventListener(\"scroll\");\r\n        };\r\n    }, []);\r\n    return(\r\n        <div className={`nav col-12 ${show && \"nav_black\"}`}>\r\n            <img\r\n            className=\"nav_logo\"\r\n            src={logo}\r\n            alt=\"Neflix\" />\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Nav;","import React from 'react';\nimport './App.css';\nimport Row from './Row';\nimport requests from './Request';\nimport Banner from './Banner';\nimport Nav from './Nav'\n\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"container-fluid\" style={{'position' : 'absolute' , 'overflow-x':'hidden', 'backgroundColor' : 'black'}}>\n\n        <Nav />\n        <Banner />\n        <Row title=\"NETFLIX ORIGINAL\" fetchUrl={requests.fetchTranding} isLargeRow /> \n        <Row title=\"Top Rated\" fetchUrl={requests.fetchrated}  />\n        <Row title=\"NETFLIX POPULAR\" fetchUrl={requests.fetchpopular}  />\n        <Row title=\"NETFLIX TRANDING\" fetchUrl={requests.fetchtrand}  />\n        <Row title=\"Up Comming\" fetchUrl={requests.fetchUpcomming}  />\n       \n        \n     \n        \n    </div>  \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}